version: '3.8' # Specify docker-compose version

services:
  # API Service
  api:
    container_name: eventmanagement_api
    build:
      context: . # Build from the Dockerfile in the current directory
      dockerfile: Dockerfile
    ports:
      - "5002:8080" # Map host port 5002 to container port 8080 (HTTP)
      - "5003:8081" # Map host port 5003 to container port 8081 (HTTPS)
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      # Connection string uses environment variables defined in the db service
      - ConnectionStrings__MariaDbConnection=Server=db;Port=3306;Database=${MARIADB_DATABASE};Uid=${MARIADB_USER};Pwd=${MARIADB_PASSWORD};
      # For HTTPS development certificate
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_Kestrel__Certificates__Default__Password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      # Mount the specific exported certificate file from the project root
      - ./aspnetapp.pfx:/https/aspnetapp.pfx:ro
    depends_on:
      db:
        condition: service_healthy # Wait for the database to be healthy before starting API
    networks:
      - eventmanagement-network

  # Database Service (MariaDB)
  db:
    container_name: eventmanagement_db
    image: mariadb:10.6 # Use official MariaDB image (adjust version if needed)
    ports:
      - "3307:3306" # Map host port 3307 to container port 3306 (optional, for external access/debugging)
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD} # Use environment variable from .env file
      MARIADB_DATABASE: ${MARIADB_DATABASE}           # Use environment variable from .env file
      MARIADB_USER: ${MARIADB_USER}                   # Use environment variable from .env file
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}           # Use environment variable from .env file
    volumes:
      - mariadb_data:/var/lib/mysql # Persist database data using a named volume
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u$$MARIADB_USER", "-p$$MARIADB_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eventmanagement-network

# Define Networks
networks:
  eventmanagement-network:
    driver: bridge

# Define Volumes
volumes:
  mariadb_data:
    driver: local